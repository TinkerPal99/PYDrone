.TH "py-scripts.myLib.lib_distance" 3 "Tue Oct 22 2019" "Version 1.0" "PyDrone" \" -*- nroff -*-
.ad l
.nh
.SH NAME
py-scripts.myLib.lib_distance
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBsimple_measure\fP (GPIO_TRIGGER, GPIO_ECHO)"
.br
.ti -1c
.RI "def \fBmeasure_average_of_3\fP (GPIO_TRIGGER, GPIO_ECHO)"
.br
.ti -1c
.RI "def \fBmeasure_average_of_x\fP (x, GPIO_TRIGGER, GPIO_ECHO)"
.br
.ti -1c
.RI "def \fBprintSettings\fP ()"
.br
.ti -1c
.RI "def \fBprint_formattedMeasure\fP (GPIO_TRIGGER, GPIO_ECHO)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBtemperature\fP = 20"
.br
.ti -1c
.RI "int \fBspeedSound\fP = 33100 + (0\&.6 * \fBtemperature\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "def py\-scripts\&.myLib\&.lib_distance\&.measure_average_of_3 ( GPIO_TRIGGER,  GPIO_ECHO)"

.SS "def py\-scripts\&.myLib\&.lib_distance\&.measure_average_of_x ( x,  GPIO_TRIGGER,  GPIO_ECHO)"

.SS "def py\-scripts\&.myLib\&.lib_distance\&.print_formattedMeasure ( GPIO_TRIGGER,  GPIO_ECHO)"

.SS "def py\-scripts\&.myLib\&.lib_distance\&.printSettings ()"

.SS "def py\-scripts\&.myLib\&.lib_distance\&.simple_measure ( GPIO_TRIGGER,  GPIO_ECHO)"

.SH "Variable Documentation"
.PP 
.SS "int py\-scripts\&.myLib\&.lib_distance\&.speedSound = 33100 + (0\&.6 * \fBtemperature\fP)"

.SS "int py\-scripts\&.myLib\&.lib_distance\&.temperature = 20"

.SH "Author"
.PP 
Generated automatically by Doxygen for PyDrone from the source code\&.
